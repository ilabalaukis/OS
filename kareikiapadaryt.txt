>Sukurti realios mašinos metodus (jų trūksta mūsų projekte).
   -> CHECK CHANEL STATUS - registras Ch. st., kuris rodys, kokie kanalai užimti. O Komanda patikrins, ar galima, naudotik kažkurį tai kanalą. Ši komanda naudojama komandoms PRNT, LEM, LUM.
   Su dviejais kanalais komanda ?? Reikalinga ar ne?
   Pakeičia mode į 1 ir žiūri, kuris interuptas.
   ->
   ->
>Sukurti virtualios mašinos metodus (jie yra mūsų projektre)
	>PRINT
	>CMP
	>LEM
	>LUM
	>HALT -> setTI = 0;
	>JMG
	>JME
	>JMP
	>PUSH
	>POP
>Sukurti metodą kuris įvykdytų komandą (!!!)
> Interuptai
Pakurti interruptų įrenginį, kuris tvarkosi su interruptais kai jie atsiranda. Tai yra vienas metodas, kuris tikrina interruptų
registrus ir atitinkamai kala switch. Jei nuliukai - nieko neįvyksta, jei nenulinės reikšmės - atitinkamai switch reaguoja. 
 -> 4 tipai: 
 	-Timerio tik vienas
 	-IOI: komanda prašo inputo ir ką su juo daryt? Viena komanda, kuri prašytų inputo ir jį kažkur padėtų.
 	Inputo interruptas žiūri, ar laisvas kanalas reikalingas.
Pas mus supervizorinis rėžimas bus kviečiamas arba komandoje, arba tame interruptų metode - interruptų įrenginyje.
 	-Supervizoriaus: trūksta vietos mašinai(pasižiūri, ar dar galima duoti atminties).
 	-Programinis pertraukimas: programa per ilga, nėra halt, dalyba iš nulio, 
 	-Jei iškviečiamas Programinis interrupt'as - kilinam programą. 
 	-Kilinam tada kai rašo programą ar tada, kai vykdo programą, jei per daug atminties užima?
> Papildyti komandas. Parašyti kokie flagai pasikeitė. 
 	- Reikia komandos įvesčiai gauti (INP) - kviest interruptą. Jei užimtas kanalas, tai skipins savo eilę/ liks pakibus.
Data Format flag'as reikalingas, kad galėtumėm garantuoti jog bus išspausdintos raidės. 
SUPERVIZORINIAI INTERUPTAI!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

PROGRAMINIAI:
metodas, kuris paima virtualios mašinos ID. (metodas(vm_id)){
	virtualMachines.get(VM_ID) <- IC
	perskaito cs. Paima tą kodą, kažką padarai ir tada IC+1/2/3
}
vm_id - nuo 0 iki kiek yra mašinų. (virtualMachine.Size()-1)
